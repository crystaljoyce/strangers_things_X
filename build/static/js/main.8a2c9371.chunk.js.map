{"version":3,"sources":["components/AccountForm.js","components/Posts.js","components/AddPost.js","components/Messages.js","components/Profile.js","index.js"],"names":["AccountForm","type","setToken","setUser","useState","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","history","useHistory","handleSubmit","ev","a","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","push","onSubmit","className","placeholder","aria-label","value","onChange","target","to","Posts","props","postsList","setPosts","content","setContent","handleDelete","postIdToDelete","newPosts","filter","post","_id","postIdToRespond","message","map","index","price","author","description","willDeliver","location","messages","onClick","status","AddPost","posts","setTitle","setDescription","setPrice","setLocation","setWillDeliver","event","for","id","checked","Messages","setMessages","fetchUser","useEffect","idx","fromUser","Profile","length","App","setPostId","fetchPosts","undefined","role","aria-current","path","ReactDOM","render","document","getElementById"],"mappings":"yPAqFeA,EA/EK,SAAC,GAA+B,IAAD,IAA7BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAAa,EAEjBC,mBAAS,IAFQ,mBAE1CC,EAF0C,KAEhCC,EAFgC,OAGjBF,mBAAS,IAHQ,mBAG1CG,EAH0C,KAGhCC,EAHgC,KAI3CC,EAAiB,UAATR,EAAmB,QAAU,WACrCS,EAAyB,UAATT,EAAmB,uCAAyC,QAC5EU,EAAwB,UAATV,EAAmB,WAAa,QAC/CW,EAAUC,cAGVC,EAAY,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBD,EAAGE,iBACHC,QAAQC,IAAI,aAAcd,GAC1Ba,QAAQC,IAAI,aAAcZ,GAHP,SAIIa,MAAM,uEAAD,OAAwEnB,GAAQ,CAC1GoB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJrB,WACAE,gBAZa,cAIboB,EAJa,OAgBnBT,QAAQC,IAAI,aAAcQ,GAhBP,SAiBEA,EAASC,OAjBX,mBAiBZC,EAjBY,EAiBZA,KACPX,QAAQC,IAAI,WAAY,CAACU,SACnBC,EAnBa,OAmBLD,QAnBK,IAmBLA,OAnBK,EAmBLA,EAAMC,MACpBZ,QAAQC,IAAI,UAAWW,IACnBA,EArBe,wBAsBjB5B,EAAS4B,GAtBQ,UAuBMV,MAAM,yEAA0E,CACrGC,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAhB,OAA2BQ,MA1Bd,eAuBXH,EAvBW,iBA6BIA,EAASC,OA7Bb,iBA6BVC,EA7BU,EA6BVA,KACPX,QAAQC,IAAI,SAAUU,GACtB1B,EAAQ0B,GACRvB,EAAY,IACZE,EAAY,IACZI,EAAQmB,KAAK,UAlCI,4CAAH,sDAsClB,OAAO,qCACL,6BAAKtB,IACL,sBAAMuB,SAAUlB,EAAhB,SACA,sBAAKmB,UAAU,MAAf,UACF,qBAAKA,UAAU,MAAf,SACI,0BACAhC,KAAK,OACLgC,UAAU,eACVC,YAAY,YACZC,aAAW,YACXC,MAAO/B,EACPgC,SAAU,SAACtB,GAAD,OAAQT,EAAYS,EAAGuB,OAAOF,SANxC,4BAM2D,YAN3D,0BAOU,GAPV,0BAQW,GARX,MAUA,sBAAKH,UAAU,MAAf,UACA,0BACAhC,KAAK,WACLgC,UAAU,eACVC,YAAY,WAAWC,aAAW,WAClCC,MAAO7B,EACP8B,SAAU,SAACtB,GAAD,OAAQP,EAAYO,EAAGuB,OAAOF,SALxC,4BAK2D,YAL3D,0BAMU,GANV,0BAOW,GAPX,IAQA,wBAAQnC,KAAK,SAAb,SAAuBQ,OArBzB,SAwBA,cAAC,IAAD,CAAM8B,GAAE,WAAM5B,GAAd,SAA+BD,QC8BpB8B,G,YAlGD,SAAEC,GAAY,IAAD,EACDrC,mBAAS,MACvBsC,GAFe,oBAE2CD,EAA1DC,WAAWC,EAA+CF,EAA/CE,SAAUb,EAAqCW,EAArCX,MAAOc,EAA8BH,EAA9BG,QAASC,EAAqBJ,EAArBI,WAAYnB,EAASe,EAATf,KAGnDoB,EAAY,uCAAG,WAAOC,GAAP,mBAAA/B,EAAA,6DACjBE,QAAQC,IAAI,iBAAkB4B,GADb,SAEM3B,MAAK,8EAAyE2B,GAAiB,CAClH1B,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BQ,MANhB,cAEXH,EAFW,gBASEA,EAASC,OATX,OASXC,EATW,OAUjBX,QAAQC,IAAI,SAAUU,GAClBA,IACMmB,EAAWN,EAAUO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQJ,KACvDJ,EAASK,IAbI,2CAAH,sDAkBdlC,EAAY,uCAAG,WAAOsC,GAAP,iBAAApC,EAAA,6DACrBE,QAAQC,IAAIiC,GADS,SAEEhC,MAAM,uEAAD,OAAwEgC,EAAxE,aAAoG,CAC9H/B,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA4BQ,IAE9BP,KAAMC,KAAKC,UAAU,CACnB4B,QAAQ,CACRT,eAViB,cAEfjB,EAFe,gBAcFA,EAASC,OAdP,OAcfC,EAde,OAerBX,QAAQC,IAAIU,GACZX,QAAQC,IAAI,qBAAsBU,GAClCgB,EAAWhB,GAjBU,4CAAH,sDAoBhB,OAAKa,EAGE,qCACH,sDAEIA,EAAUY,KAAI,SAACJ,EAAMK,GAAW,IAAD,IAC/B,OAAO,8BACL,qBAAKtB,UAAU,OAAf,SACA,sBAAKA,UAAU,YAAf,UACA,eAAC,IAAD,CAAMM,GAAG,aAAT,UAAsB,qBAAIN,UAAU,aAAd,iBAA6BiB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMzC,MAAnC,OAAtB,OAA8E,gDAAYyC,QAAZ,IAAYA,OAAZ,EAAYA,EAAMM,MAAlB,OAC9E,2DAAuBN,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAMO,cAA7B,aAAuB,EAAcpD,YACrC,qCAAO6C,QAAP,IAAOA,OAAP,EAAOA,EAAMQ,cACb,wDAAgD,KAAlB,OAAJR,QAAI,IAAJA,OAAA,EAAAA,EAAMS,aAAuB,MAAQ,QAC/D,oCAA0B,kBAAf,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UAA8B,GAApC,OAAyCV,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAMU,SAAtD,QACA,2CAAOV,QAAP,IAAOA,OAAP,EAAOA,EAAMW,YACb,+BACK,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMO,OAAOpD,aAAb,OAA0BqB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMrB,UAC/B,wBACFJ,KAAK,SACLgC,UAAU,MACV6B,QAAS,kBAAMhB,EAAaI,EAAKC,MAH/B,sBAIA,KAEArB,IAAa,OAAJoB,QAAI,IAAJA,GAAA,UAAAA,EAAMO,cAAN,eAAcpD,aAAd,OAA2BqB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMrB,UAC1C,sBAAK4B,UAAU,cAAf,UACF,wBACAhC,KAAK,SACLgC,UAAU,MACV6B,QAAS,kBAAMhD,EAAY,OAACoC,QAAD,IAACA,OAAD,EAACA,EAAMC,MAHlC,uBAIEY,OAEF,+BAEE,0BACA9B,UAAU,eACVE,aAAW,gBACXD,YAAY,4CAA2CG,SAAU,SAACtB,GAAD,OAAQ8B,EAAW9B,EAAGuB,OAAOF,eAM9F,SApCamB,SANd,sC,QC2CAS,EAlGC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOtB,EAAsB,EAAtBA,SAAUb,EAAY,EAAZA,MAAY,EACtB1B,mBAAS,IADa,mBACzCK,EADyC,KAClCyD,EADkC,OAEV9D,mBAAS,IAFC,mBAEzCsD,EAFyC,KAE5BS,EAF4B,OAGtB/D,mBAAS,IAHa,mBAGzCoD,EAHyC,KAGlCY,EAHkC,OAIhBhE,mBAAS,IAJO,mBAIzCwD,EAJyC,KAI/BS,EAJ+B,OAKVjE,oBAAS,GALC,mBAKzCuD,EALyC,KAK5BW,EAL4B,KAOtCxD,EAAY,uCAAG,WAAOyD,GAAP,mBAAAvD,EAAA,6DACjBuD,EAAMtD,iBACNC,QAAQC,IAAI,uBAAwBV,EAAOiD,GAF1B,SAGMtC,MAAM,sEAAuE,CAClGC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA4BQ,IAE9BP,KAAMC,KAAKC,UAAU,CACnByB,KAAK,CACLzC,QACAiD,cACAF,QACAI,WACAD,mBAfa,cAGXhC,EAHW,gBAmBEA,EAASC,OAnBX,OAmBXC,EAnBW,OAqBjBX,QAAQC,IAAI,SAAUU,GACtBc,EAAS,GAAD,mBAAKsB,GAAL,QAAYpC,QAAZ,IAAYA,GAAZ,UAAYA,EAAMA,YAAlB,aAAY,EAAYqB,QAChCgB,EAAS,IACTC,EAAe,IACfC,EAAS,IACTC,EAAY,IACZC,GAAe,GA3BE,4CAAH,sDA8BlB,OAAO,qCACP,wDAGA,qBAAKrC,UAAU,mBAAf,SACA,uBAAMD,SAAUlB,EAAhB,UACE,uBACIb,KAAK,OACLiC,YAAY,QACZD,UAAU,eACVG,MAAO3B,EACP4B,SAAU,SAACkC,GAAD,OAAWL,EAASK,EAAMjC,OAAOF,UAE/C,0BACInC,KAAK,OACLiC,YAAY,cACZD,UAAU,eACVE,aAAW,gBACXC,MAAOsB,EACPrB,SAAU,SAACkC,GAAD,OAAWJ,EAAeI,EAAMjC,OAAOF,UAdvD,IAec,uBACZ,sBAAKH,UAAU,mBAAf,UACF,sBAAMA,UAAU,mBAAhB,eACE,uBACIhC,KAAK,OACLiC,YAAY,QACZC,aAAW,iCACXF,UAAU,eACVG,MAAOoB,EACPnB,SAAU,SAACkC,GAAD,OAAWH,EAASG,EAAMjC,OAAOF,UAE/C,sBAAMH,UAAU,mBAAhB,oBAEA,uBACIhC,KAAK,OACLiC,YAAY,WACZD,UAAU,eACVG,MAAOwB,EACPvB,SAAU,SAACkC,GAAD,OAAWF,EAAYE,EAAMjC,OAAOF,UAElD,gCACA,uBAAOoC,IAAI,cAAX,0DACA,uBACIvE,KAAK,WACLwE,GAAG,cACHxC,UAAU,mBACVE,aAAW,oCACXD,YAAY,cACZwC,QAASf,EACTtB,SAAU,SAACkC,GAAD,OAAWD,EAAeC,EAAMjC,OAAOoC,eAGrD,wBACIzE,KAAK,SACLgC,UAAU,0BAFd,+BCPS0C,EAzEE,SAAElC,GAAY,IAEnBX,EAAqDW,EAArDX,MAAO3B,EAA8CsC,EAA9CtC,QAAgBuB,GAA8Be,EAArCwB,MAAqCxB,EAA9Bf,MAFL,GAEmCe,EAAxBG,QAAwBH,EAAfI,WACZzC,mBAAS,KAHjB,mBAGlByD,EAHkB,KAGRe,EAHQ,KAKpBC,EAAS,uCAAG,oCAAA7D,EAAA,sEACSI,MAAM,yEAA0E,CACnGC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BQ,MALrB,cACRH,EADQ,gBASGA,EAASC,OATZ,OASVC,EATU,OAUVX,QAAQC,IAAI,eAAZ,OAA2BU,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAMA,YAAjC,aAA2B,EAAYoC,OACvC/C,QAAQC,IAAI,mBAAZ,OAAgCU,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAMA,YAAtC,aAAgC,EAAYgC,UAC5Ce,EAAW,OAAC/C,QAAD,IAACA,GAAD,UAACA,EAAMA,YAAP,aAAC,EAAYgC,UAExB1D,EAAO,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMA,MAdJ,4CAAH,qDAkBnBiD,qBAAU,WACND,IACA3D,QAAQC,IAAI,eAAgBO,KAE7B,CAACI,IAwBA,OAAO,mCACLA,EACF,gCAAK,uBAEA,2CAAO+B,QAAP,IAAOA,OAAP,EAAOA,EAAUP,KAAI,SAACD,EAAS0B,GAAS,IAAD,EACnC,OAAO,mCACA,oCAAgB,yCAAG,+BACN,OAAP1B,QAAO,IAAPA,GAAA,UAAAA,EAAS2B,gBAAT,eAAmB3E,UACnB,oCAAM,uBAAN,IAAY,8CAAkBgD,EAAQ2B,SAAS3E,SAAnC,OACd,yCAAYgD,EAAQH,KAAKzC,MAAzB,OACA,8BAAI4C,EAAQT,QAAZ,OAFE,IAEwB,uBAFxB,IAE8B,uBAF9B,OAGC,UALGmC,cAYnB,oDCtCIE,EAvCC,SAACxC,GAAW,IAAD,IAEff,EAAyBe,EAAzBf,KAAMI,EAAmBW,EAAnBX,MAAO3B,EAAYsC,EAAZtC,QAEf0E,EAAS,uCAAG,gCAAA7D,EAAA,sEACSI,MAAM,yEAA0E,CACnGC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BQ,MALrB,cACRH,EADQ,gBASGA,EAASC,OATZ,OASVC,EATU,OAUVX,QAAQC,IAAI,eAAZ,OAA2BU,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAMA,YAAjC,aAA2B,EAAYoC,OACvC/C,QAAQC,IAAI,UAAZ,OAAuBU,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMA,MAC7B1B,EAAO,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMA,MAZJ,2CAAH,qDAsBf,OANJiD,qBAAU,WACND,IACA3D,QAAQC,IAAI,eAAgBO,KAE7B,CAACI,IAEO,0CAAMA,EACP,gCAEE,gDACA,oCAAKJ,QAAL,IAAKA,OAAL,EAAKA,EAAMrB,WACX,gEAA4BqB,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAMmC,gBAAlC,aAA4B,EAAgBqB,OAA5C,QACA,2DAAuBxD,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAMuC,aAA7B,aAAuB,EAAaiB,aAGtC,qDCnBJC,EAAM,WAAO,IAAD,EAEY/E,mBAAS,IAFrB,mBAEP0B,EAFO,KAEA5B,EAFA,OAGWE,mBAAS,IAHpB,mBAGNsB,EAHM,KAGAvB,EAHA,OAIcC,mBAAS,IAJvB,mBAIN6D,EAJM,KAICtB,EAJD,OAKcvC,mBAAS,MALvB,mBAKCgF,GALD,aAMkBhF,mBAAS,IAN3B,mBAMNwC,EANM,KAMGC,EANH,OAOwBzC,mBAAS,IAPjC,mBAURyE,GAVQ,UAUC,uCAAG,8BAAA7D,EAAA,sEACaI,MAAM,yEAA0E,CACnGC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BQ,MALzB,cACJH,EADI,gBAOOA,EAASC,OAPhB,OAONC,EAPM,OAQNX,QAAQC,IAAI,SAAZ,OAAqBU,QAArB,IAAqBA,OAArB,EAAqBA,EAAMA,MAC3B1B,EAAO,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMA,MATR,2CAAH,sDAWfiD,qBAAU,WACND,IACA3D,QAAQC,IAAI,SAAUO,KACvB,CAACI,IAEJ,IAAMuD,EAAU,uCAAG,kCAAArE,EAAA,sEAEQI,MAAM,sEAAuE,CAChGE,QAAS,CACL,eAAgB,mBAChB,cAAiBQ,EAAK,iBAAaA,QAAUwD,KALtC,cAET3D,EAFS,gBAQIA,EAASC,OARb,cAQTC,EARS,OASfc,EAASd,EAAKA,KAAKoC,OACnB/C,QAAQC,IAAI,UAAUU,EAAKA,KAAKoC,OAChCmB,EAAS,OAACvD,QAAD,IAACA,GAAD,UAACA,EAAMA,YAAP,iBAAC,EAAYoC,aAAb,aAAC,EAAmBd,KAXd,kBAYRtB,EAAKA,KAAKoC,OAZF,4CAAH,qDAmBhB,OAJAa,qBAAU,WACNO,MACD,IAEK,iCACK,OAAJ3D,QAAI,IAAJA,OAAA,EAAAA,EAAMrB,WAAY,iDAAaqB,QAAb,IAAaA,OAAb,EAAaA,EAAMrB,SAAnB,QACnB,oBAAI4B,UAAU,6BAAd,SACA,sBAAKA,UAAU,MAAMsD,KAAK,aAA1B,UACA,oBAAItD,UAAU,WAAd,SACA,cAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,WAAWuD,eAAa,OAA/C,oBACA,oBAAIvD,UAAU,WAAd,SACA,cAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,WAAWuD,eAAa,OAApD,qBACA,oBAAIvD,UAAU,WAAd,SACA,cAAC,IAAD,CAAMM,GAAG,WAAWN,UAAU,WAAWuD,eAAa,OAAtD,uBACA,oBAAIvD,UAAU,WAAd,SACA,cAAC,IAAD,CAAMM,GAAG,YAAYN,UAAU,WAAWuD,eAAa,OAAvD,wBACA,oBAAIvD,UAAU,WAAd,SACA,cAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,WAAWuD,eAAa,OAApD,0BAIJ,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,CACIxF,KAAM,QACNC,SAAUA,EACVC,QAASA,MAGjB,cAAC,IAAD,CAAOsF,KAAK,YAAZ,SACI,cAAC,EAAD,CACIxF,KAAM,WACNC,SAAUA,EACVC,QAASA,MAEjB,eAAC,IAAD,CAAOsF,KAAK,SAAZ,UACM3D,EACC,oCAAM,cAAC,EAAD,CACLa,SAAWA,EACXsB,MAAQA,EACR/D,SAAUA,EACV4B,MAAOA,IAAQ,0BAEjB,GACF,cAAC,EAAD,CACIY,UAAWuB,EACXnC,MAAOA,EACPa,SAAUA,EACVC,QAASA,EACTC,WAAYA,EACZnB,KAAMA,OAEd,cAAC,IAAD,CAAO+D,KAAM,YAAb,SACM3D,EACA,oCAAM,cAAC,EAAD,CACJmC,MAAOA,EACPtB,SAAUA,EACVb,MAAOA,EACP5B,SAAUA,EACVC,QAASA,IALX,OAOA,mDAEN,cAAC,IAAD,CAAOsF,KAAK,WAAZ,SACI,cAAC,EAAD,CACI/D,KAAMA,EACNvB,QAASA,EACT2B,MAAOA,UAOvB4D,IAASC,OACL,cAAC,IAAD,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.8a2c9371.chunk.js","sourcesContent":["  \nimport React, { useState } from 'react';\nimport {\n  Link,\n  useHistory} from 'react-router-dom'; \n\nconst AccountForm = ({type, setToken, setUser}) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'You can register by clicking here.  ' : 'Login';\n  const oppositeType = type === 'login' ? 'Register' : 'Login';\n  const history = useHistory();\n\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, { // or use the `/users/login` route for login!\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log('response: ', response);\n    const {data} = await response.json();\n    console.log('{data}: ', {data});\n    const token = data?.token;\n    console.log('token: ', token);\n    if (token) {\n      setToken(token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      const {data} = await response.json();\n      console.log('data: ', data);\n      setUser(data);\n      setUsername('');\n      setPassword('');\n      history.push('/posts')\n    }\n    }\n\n  return <>\n    <h2>{title}</h2>\n    <form onSubmit={handleSubmit}>\n    <div className=\"row\">\n  <div className=\"col\">\n      <input \n      type=\"text\" \n      className=\"form-control\" \n      placeholder=\"user name\" \n      aria-label=\"user name\"\n      value={username} \n      onChange={(ev) => setUsername(ev.target.value)}placeholder=\"username\"\n      required={true}\n      minLength={5}></input>\n      </div>\n      <div className=\"col\">\n      <input \n      type=\"password\" \n      className=\"form-control\" \n      placeholder=\"password\" aria-label=\"password\"\n      value={password} \n      onChange={(ev) => setPassword(ev.target.value)}placeholder=\"password\"\n      required={true}\n      minLength={8}></input>\n      <button type=\"submit\">{title}</button>\n      </div> </div> \n    </form>    \n    <Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\n  </>\n}\n\nexport default AccountForm;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from 'react-router-dom';\nimport {\n    Link,\n    } from 'react-router-dom'; \nimport EditPost from './EditPost';\nimport { MessagesSend } from './MessagesSend';\nimport { user } from './index'\n\n\n\n\nconst Posts = ( props ) => {\n    const [ setPostId ] = useState(null);\n    const { postsList, setPosts, token, content, setContent, user } = props; \n    \n\n    const handleDelete = async (postIdToDelete) => {\n        console.log('postIdToDelete', postIdToDelete);\n        const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${postIdToDelete}`,{\n            method: \"DELETE\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n        });\n        const data = await response.json();\n        console.log(\"data: \", data);\n        if (data) {\n            const newPosts = postsList.filter(post => post._id !== postIdToDelete);\n            setPosts(newPosts)\n        }\n    }\n\n\n  const handleSubmit = async (postIdToRespond) => {\n  console.log(postIdToRespond)\n  const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${postIdToRespond}/messages`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'Application/json',\n      'Authorization': `Bearer ${ token }`,\n    },\n    body: JSON.stringify({\n      message:{\n      content,\n      }\n    })\n  });\n  const data = await response.json();\n  console.log(data)\n  console.log('Messages Content: ', data);\n  setContent(data)\n  }\n\n    if (!postsList) {\n        return <div> </div>\n    }\n    return <>\n        <h2> Feast your eyes:   </h2>\n          {\n            postsList.map((post, index) => {\n            return <div key={index}>\n              <div className=\"card\" >\n              <div className=\"card-body\">\n              <Link to=\"/posts/:id\"><h3 className=\"card-title\">{ post?.title } </h3> </Link><h4>Price: {post?.price} </h4> \n              <h4> Offered by user: {post?.author?.username}</h4>\n              <div>{ post?.description }</div>\n              <div>Delivery Available: {post?.willDeliver === true ? 'Yes' : 'No'}</div>\n              <div> {post?.location === '[On Request]' ? '' : post?.location}  </div>\n              <div> {post?.messages}</div>\n              <div>\n              {post?.author.username === user?.username\n              ? <button\n              type='button'\n              className='btn'\n              onClick={() => handleDelete(post._id)}> Delete </button>\n              : '' }\n              </div>\n              { token && post?.author?.username !== user?.username\n              ? <div className=\"input-group\">\n              <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => handleSubmit(post?._id)}> Respond </button>\n              { status = \"active\" \n              ?\n              <form> \n                \n                <textarea \n                className=\"form-control\" \n                aria-label=\"With textarea\"\n                placeholder=\"type your message to the seller here ... \"onChange={(ev) => setContent(ev.target.value)}> \n                </textarea>\n                \n              </form> \n              : ''} \n              </div>\n              : '' } \n              </div>\n              </div>\n                </div> \n                })\n            }\n\n            </>\n\n                };\n    \n   \nexport default Posts;","import React, { useState } from 'react';\n\nconst AddPost = ({ posts, setPosts, token }) => {\nconst [title, setTitle] = useState('');\nconst [description, setDescription] = useState('');\nconst [price, setPrice] = useState('');\nconst [location, setLocation] = useState('');\nconst [willDeliver, setWillDeliver] = useState(false);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('title, description: ', title, description)\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'Application/json',\n            'Authorization': `Bearer ${ token }`,\n          },\n          body: JSON.stringify({\n            post:{\n            title,\n            description,\n            price,\n            location,\n            willDeliver,\n            }\n          })\n        });\n        const data = await response.json();\n\n        console.log('data: ', data);\n        setPosts([...posts, data?.data?.post]);\n        setTitle('');\n        setDescription('');\n        setPrice('');\n        setLocation('');\n        setWillDeliver(false);\n    }\n\n    return <>  \n    <h2> \n      List an item for sale: \n    </h2>\n    <div className=\"input-group mb-3\">\n    <form onSubmit={handleSubmit}>\n      <input \n          type=\"text\"\n          placeholder=\"title\"\n          className=\"form-control\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}>\n      </input>\n      <textarea \n          type=\"text\"\n          placeholder=\"description\"\n          className=\"form-control\"\n          aria-label=\"With textarea\"\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}>\n      </textarea> <br></br>\n      <div className=\"input-group mb-3\">\n    <span className=\"input-group-text\">$</span>\n      <input \n          type=\"text\"\n          placeholder=\"price\"\n          aria-label=\"Amount (to the nearest dollar)\"\n          className=\"form-control\"\n          value={price}\n          onChange={(event) => setPrice(event.target.value)}>\n      </input>\n      <span className=\"input-group-text\">.00</span>\n</div>\n      <input \n          type=\"text\"\n          placeholder=\"Location\"\n          className=\"form-control\"\n          value={location}\n          onChange={(event) => setLocation(event.target.value)}>\n      </input>\n      <div> \n      <label for=\"willDeliver\">Check the box if you can deliver this item. </label>\n      <input \n          type=\"checkbox\"\n          id=\"willDeliver\"\n          className=\"form-check-input\"\n          aria-label=\"Checkbox for following text input\"\n          placeholder=\"willDeliver\"\n          checked={willDeliver}\n          onChange={(event) => setWillDeliver(event.target.checked)}>\n      </input> \n      </div>\n      <button \n          type=\"submit\"\n          className=\"btn btn-outline-primary\">List it!\n      </button>\n    </form> \n    </div>\n    </>\n}\n\nexport default AddPost;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from 'react-router-dom';\nimport {\n    Link,\n    useHistory} from 'react-router-dom'; \nimport Posts from './Posts';\n\n\n\n\nconst Messages = ( props ) => {\n\n    const { token, setUser, posts, user, content, setContent } = props; \n    const [ messages, setMessages ] = useState([]);\n\n    const fetchUser = async () => {\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n           \n            }),\n            data = await response.json();\n            console.log('user posts: ',data?.data?.posts)\n            console.log(\"user messages : \", data?.data?.messages)\n            setMessages(data?.data?.messages)\n            \n            setUser(data?.data)\n            \n        }\n\nuseEffect(() => {\n    fetchUser()\n    console.log('user posts: ', user)\n    \n}, [token])\n\nconst handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log('title, description: ', token)\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}/messages`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/json',\n        'Authorization': `Bearer ${ token }`,\n      },\n      body: JSON.stringify({\n        message:{\n            content,\n        }\n      })\n    });\n    const data = await response.json();\n    console.log('data: ', data);\n    setPosts([data, ...posts]);\n    setContent('');\n    \n}\n\n    return <> \n    { token ? \n    <div><br/> \n         \n         <div> {messages?.map((message, idx) => {\n             return <>\n                    <div key={idx}> <> <div> \n                        { message?.fromUser?.username \n                        ? <div> <br/> <h3> From user: { message.fromUser.username } </h3> \n                        <h4>Title: {message.post.title} </h4> \n                        <p>{message.content} </p> <hr/> <br/> </div>\n                        :  '' }  \n                        </div>\n                        </>\n                    </div>\n             </>\n         })}</div>\n         </div>\n         : 'You must be a registered User to read Messages'} \n         </>\n            };\n   \nexport default Messages;","import React, { useState, useEffect } from 'react';\n\n\nconst Profile = (props) => {\n\n    const { user, token, setUser } = props; \n\n    const fetchUser = async () => {\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n           \n            }),\n            data = await response.json();\n            console.log('user posts: ',data?.data?.posts)\n            console.log(\"user : \", data?.data)\n            setUser(data?.data)\n            \n        }\n\nuseEffect(() => {\n    fetchUser()\n    console.log('user posts: ', user)\n    \n}, [token])\n    \n    return <>  { token \n        ? <div> \n\n            <h3>Current user: </h3> \n            <h5>{user?.username}</h5>\n            <div> Total Posts Created: {user?.messages?.length}  </div>\n            <div> Total Messages: {user?.posts?.length}</div>\n            \n        </div>\n        : 'You must be a Registered User to view Profile.' }\n    </> \n}\n\nexport default Profile; ","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n    Posts,\n    AddPost,\n    AccountForm,\n    Messages,\n    Profile,\n} from './components';\nimport { \n    BrowserRouter as Router,\n    Route, \n    Link,\n} from 'react-router-dom';\nimport PostSingle from './components/PostSingle';\n\n\nconst BASE_URL = 'https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts'\n\nconst App = () => {\n    \n    const [token, setToken] = useState('');\n    const [ user, setUser] = useState({});\n    const [ posts, setPosts ] = useState([]);\n    const [postId, setPostId] = useState(null);\n    const [ content, setContent ] = useState([]);\n    const [ searchTerm, setSearchTerm ] = useState('');\n\n\n    const fetchUser = async () => {\n            const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },}),\n                data = await response.json();\n                console.log('user: ',data?.data)\n                setUser(data?.data)\n            }\n    useEffect(() => {\n        fetchUser()\n        console.log('user: ', user)\n    }, [token])\n\n    const fetchPosts = async () => { \n        \n        const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token ? `Bearer ${token}` : undefined\n            },\n        });\n        const data = await response.json();\n        setPosts(data.data.posts)\n        console.log('posts: ',data.data.posts)\n        setPostId(data?.data?.posts?._id)\n        return data.data.posts\n    }\n   \n    useEffect(() => {\n        fetchPosts()\n    }, []);\n\n    return (<div>      \n            {user?.username && <div>Hello, {user?.username}! </div>}\n            <ul className=\"nav justify-content-center\">\n            <nav className=\"nav\" role=\"navigation\">\n            <li className='nav item'>\n            <Link to=\"/\" className=\"nav-link\" aria-current=\"page\">Home</Link></li>\n            <li className='nav item'>\n            <Link to=\"/posts\" className=\"nav-link\" aria-current=\"page\">Posts</Link></li>\n            <li className='nav item'>\n            <Link to=\"/profile\" className=\"nav-link\" aria-current=\"page\">Profile</Link></li>\n            <li className='nav item'>\n            <Link to=\"/messages\" className=\"nav-link\" aria-current=\"page\">Messages</Link></li>\n            <li className='nav item'>\n            <Link to=\"/login\" className=\"nav-link\" aria-current=\"page\">Login</Link></li>\n            </nav>\n            </ul>\n\n        <Route path=\"/login\">\n            <AccountForm \n                type={'login'} \n                setToken={setToken} \n                setUser={setUser}\n                />\n        </Route>\n        <Route path=\"/register\">\n            <AccountForm \n                type={'register'} \n                setToken={setToken} \n                setUser={setUser}/>\n        </Route>\n        <Route path=\"/Posts\">\n            { token \n            ?  <div> <AddPost \n                setPosts={ setPosts } \n                posts={ posts } \n                setToken={setToken} \n                token={token}/><hr/>\n                </div>\n            : '' } \n            <Posts \n                postsList={posts}\n                token={token}\n                setPosts={setPosts}\n                content={content}\n                setContent={setContent}\n                user={user}/>\n        </Route>\n        <Route path =\"/messages\">\n            { token \n            ? <div> <Messages \n                posts={posts}\n                setPosts={setPosts}\n                token={token}\n                setToken={setToken}\n                setUser={setUser}\n                /> </div>\n            : 'You must be a Registered User to view Messages' } \n        </Route>  \n        <Route path='/profile'>\n            <Profile    \n                user={user}\n                setUser={setUser}\n                token={token}\n                />\n            </Route>      \n        </div>)\n\n}\n\nReactDOM.render (\n    <Router>\n    <App />\n    </Router>,\n    document.getElementById('root')\n)"],"sourceRoot":""}